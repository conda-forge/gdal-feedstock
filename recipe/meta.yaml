{% set version = "3.7.3" %}

package:
  name: gdal-split
  version: {{ version }}

source:
  url: http://download.osgeo.org/gdal/{{ version }}/gdal-{{ version }}.tar.xz
  sha256: e0a6f0c453ea7eb7c09967f50ac49426808fcd8f259dbc9888140eb69d7ffee6
  patches:
    - 0001-cpl_zipOpenNewFileInZip3-validate-length-of-filename.patch

build:
  number: 3
  skip_compile_pyc:
    - share/bash-completion/completions/*.py

requirements:
  build:
    - cmake
    - pkg-config >=0.21  # [not win]
    - make  # [not win]
    - ninja  # [win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 2.17  # [linux64]
    - swig
  host:
    - blosc
    - cfitsio
    - expat
    - freexl
    - geos
    - geotiff
    - giflib  # [not win]
    - hdf4
    - hdf5
    - libjpeg-turbo
    - json-c  # [not win]
    - kealib
    - lerc
    - libarchive
    - libcurl
    - libdeflate
    - libiconv
    - libkml
    - libnetcdf
    - libpng
    - libpq
    - libspatialite
    - libtiff
    - libuuid  # [linux]
    - libwebp-base
    - libxml2
    - lz4-c
    - openjpeg
    - openssl
    - pcre2
    - poppler
    - postgresql
    - proj
    # qhull disabled because of https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896
    # - qhull
    - sqlite
    - tiledb
    - xerces-c
    - xz
    - zlib
    - zstd

outputs:
  - name: libgdal
    script: install_lib.sh  # [unix]
    script: install_lib.bat  # [win]
    build:
      run_exports:
        # no idea, going with minor pin
        - {{ pin_subpackage('libgdal', max_pin='x.x') }}
    requirements:
      build:
        - cmake
        # ranlib used at install time
        - {{ compiler('c') }}
        # libstdc++ is needed in requirements/run
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
        - sysroot_linux-64 2.17  # [linux64]
      host:
        - blosc
        - cfitsio
        - expat
        - freexl
        - geos
        - geotiff
        - giflib  # [not win]
        - hdf4
        - hdf5
        - libjpeg-turbo
        - json-c  # [not win]
        - kealib
        - lerc
        - libarchive
        - libcurl
        - libdeflate
        - libiconv
        - libkml
        - libnetcdf
        - libpng
        - libpq
        - libspatialite
        - libtiff
        - libuuid  # [linux]
        - libwebp-base
        - libxml2
        - lz4-c
        - openjpeg
        - openssl
        - pcre2
        - poppler
        - postgresql
        - proj
        # qhull disabled because of https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896
        # - qhull
        - sqlite
        - tiledb
        - xerces-c
        - xz
        - zlib
        - zstd
      run:
        - cfitsio
        - geotiff
        - giflib  # [not win]
        - json-c  # [not win]
        - libpq
        - libspatialite
        - libuuid  # [linux]
        - libwebp-base
        - poppler
        - postgresql
        - proj
        - tiledb
        - xz
        - zstd
    test:
      files:
        - test_data
        - run_test.bat
        - run_test.sh
    about:
      summary: The Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-arrow-parquet
    script: build_arrow_parquet.sh  # [unix]
    script: build_arrow_parquet.bat  # [win]
    requirements:
      build:
        - cmake
        # ranlib used at install time
        - {{ compiler('c') }}
        # libstdc++ is needed in requirements/run
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
        - sysroot_linux-64 2.17  # [linux64]
      host:
        - {{ pin_subpackage('libgdal', exact=True) }}
        - blosc
        - cfitsio
        - curl
        - expat
        - freexl
        - geos
        - geotiff
        - giflib  # [not win]
        - hdf4
        - hdf5
        - libjpeg-turbo
        - json-c  # [not win]
        - kealib
        - libarchive
        - libarrow
        - libkml
        - libnetcdf
        - libpng
        - libpq
        - libspatialite
        - libtiff
        - libuuid  # [linux]
        - libwebp-base
        - libxml2
        - openjpeg
        - openssl
        - pcre2
        - poppler
        - postgresql
        - proj
        - qhull
        - sqlite
        - tiledb
        - xerces-c
        - xz
        - zlib
        - zstd
      run:
        - {{ pin_subpackage('libgdal', exact=True) }}
        - cfitsio
        - geotiff
        - giflib  # [not win]
        - json-c  # [not win]
        - libpq
        - libspatialite
        - libuuid  # [linux]
        - libwebp-base
        - poppler
        - postgresql
        - proj
        - tiledb
        - xz
        - zstd
    test:
      files:
        - test_arrow_parquet.sh   # [unix]
        - test_arrow_parquet.bat  # [win]
      commands:
        - sh test_arrow_parquet.sh   # [unix]
        - test_arrow_parquet.bat  # [win]
    about:
      summary: Arrow and Parquet drivers for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: gdal
    script: install_python.sh  # [unix]
    script: install_python.bat  # [win]
    build:
      skip_compile_pyc:
        - share/bash-completion/completions/*.py
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - make  # [unix]
        - ninja  # [win]
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - swig
      host:
        - python
        - pip
        - numpy
        - {{ pin_subpackage('libgdal', exact=True) }}
        # Workaround to prevent run depending on "libgfortran5 9.3.0" despite "hdf5"
        # having not been migrated yet causing conflicts with the "libgdal" output
        # See: https://github.com/conda-forge/gdal-feedstock/pull/415
        - hdf5
        - libxml2
        # Workaround to prevent conflicts seen in
        #  https://github.com/conda-forge/gdal-feedstock/pull/543
        - openssl
      run:
        - python
        - {{ pin_compatible('numpy') }}
        - {{ pin_subpackage('libgdal', exact=True) }}
    test:
      files:
        - test_data
        - extra_tests.py
        - run_test.py
        - test_script_exist.bat
      imports:
        - osgeo
        - osgeo.ogr
        - osgeo.gdal
        - osgeo._gdal
        - osgeo._gdalconst
        - osgeo._ogr
        - osgeo._osr
      commands:
        - python run_test.py
        # Check .py GDAL utilities
        # --help not implemented as documented for gdalattachpct.py,
        # gdal_merge.py, gdal_retile.py, gdal_sieve.py, gdalmove.py,
        # gdal_edit.py, gdal_pansharpen.py, gdalcompare.py, ogrmerge.py?
        # also, --version does not work with e.g. rgb2pct.py...
        # In addition, some scripts are checked only for existence
        # (gdalattachpct.py, gdal_retile.py, gdal_proximity.py) as they
        # unexpectedly return error codes. For easier debugging, these
        # existence checks are performed in a separate .bat file on Windows.
        # These existence checks should be replaced by regular calls once
        # behavior is fixed in GDAL itself.
        - rgb2pct.py --help
        - pct2rgb.py --help
        # Neither --help nor --version seem to work
        - test -f $PREFIX/bin/gdalattachpct.py  # [unix]
        - gdal_merge.py --version
        - gdal2tiles.py --help
        - gdal2xyz.py --help
        # Errors out on --version despite printing GDAL version
        - test -f $PREFIX/bin/gdal_retile.py  # [unix]
        # Returns error despite printing help
        - test -f $PREFIX/bin/gdal_proximity.py  # [unix]
        - gdal_polygonize.py --help
        - gdal_sieve.py --version
        - gdal_fillnodata.py --help
        - gdalmove.py --version
        # Errors out on --version despite printing GDAL version
        - test -f $PREFIX/bin/gdal_edit.py  # [unix]
        - gdal_calc.py --help
        # Errors out on --version despite printing GDAL version
        - test -f $PREFIX/bin/gdal_pansharpen.py  # [unix]
        - gdalcompare.py --version
        # Errors out on --version despite printing GDAL version
        - test -f $PREFIX/bin/ogrmerge.py  # [unix]        
        # Returns error despite printing help
        - test -f $PREFIX/bin/ogr_layer_algebra.py  # [unix]
        # Existence checks on Windows are done in a separate .bat file
        - test_script_exist.bat  # [win]
      about:
        summary: Python wrapper for the Geospatial Data Abstraction Library (GDAL)
        license: MIT
        license_file: LICENSE.TXT

about:
  home: http://www.gdal.org
  license: MIT
  license_file: LICENSE.TXT
  summary: |
    GDAL is a translator library for raster and vector geospatial data formats that is released under an
    X/MIT style Open Source license by the Open Source Geospatial Foundation.

extra:
  recipe-maintainers:
    - zklaus
    - akrherz
    - gillins
    - kmuehlbauer
    - mingwandroid
    - msarahan
    - ocefpaf
    - xylar
